# installazione di Doker in Roky Linux

- hosts: all
  become: true    # Run con privilegi elevati (sudo)
  tasks:
# creazione file cubeconfig

# aggiornamento lista dei pacchetti
   - name: Aggiornare la lista dei pacchetti
     package:
        update_cache: yes     

# controllo che pip sia installato   
   - name: Assicura che pip sia installato
     package:  
        name: python3-pip     # installa pip per python 3
        state: present        # controllo che pip sia installato

# installa il modulo python 'request'
   - name: Installa modulo Python 'requests'
     pip:
        name: requests        # Install the 'request' module

# aggiungi il repo di docker
   - name: Aggiungi repo Docker su Rocky
     get_url:       
        url: https://download.docker.com/linux/centos/docker-ce.repo            
        dest: /etc/yum.repos.d/docker-ce.repo        
     when: ansible_os_family == "RedHat"        

# installazione di docker sulla vm rocky linux 9
   - name: Installa Docker su Rocky
     dnf:
        name:
          - docker-ce        
          - docker-ce-cli        
          - containerd.io        
        state: present        
     when: ansible_os_family == "RedHat"        

# abilitare docker all'avvio
   - name: Abilitare Docker all'avvio
     systemd:
        name: docker        
        enabled: yes        
        state: started        

# controllo che docker sia in esecuzione
   - name: Verifica che Docker sia in esecuzione
     command: docker --version        
     register: docker_version        
     changed_when: false        

# creazione docker network
   - name: Creazione Docker network
     docker_network:
      name: Docker_network        
      driver: bridge         
      ipam_config:
      - subnet: 172.3.27.0/24        

# creazione container jenkins master con ip statico  
   - name: Creazione container Jenkins master con ip statico
     become: yes
     community.docker.docker_container:
      name: Jenkins_Master_Container        # nome container
      image: jenkins/jenkins:lts        # immagine
      state: started        # controllo stato del container
      user: root
      restart_policy: always        # restart automatico
      ports: 
      - "8080:8080"        # porta di accesso jenkins 8000
      - "50000:50000"        # porta per la comunicazione con il jenkins agent 5000
      networks:
      - name: Docker_network        # associazione alla docker netwhork
        ipv4_address: "172.3.27.7"        # assegnazione ip statico
      volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/jenkins/kubeconfig:/kubeconfig:ro
      privileged: true

# creazione container jenkins agent con ip statico
# installazione docker nel jenkins agent
   - name: Creazione container jenkins agent
     become: yes
     community.docker.docker_container:
      name: Jenkins_Agent_Container        # nome container
      image: jenkins/inbound-agent:latest     # immagine
      state: started        # controllo stato del container
      restart_policy: always        # restart automatico
      networks:
      - name: Docker_network        # associazione alla docker netwhork
        ipv4_address: "172.3.27.8"        # assegnazione ip statico
      env:
        JENKINS_URL: "http://192.168.33.50:8080/"        # Jenkins Master Server URL
        JENKINS_SECRET: "c21231c23c0cb2e05e2572b318410255050de4289634bf6f43b0f804a90df66f"        # Agent Secret
        JENKINS_AGENT_NAME: "agent"        # nome agent per registrarlo sul jenkins master
        JENKINS_AGENT_WORKDIR: /home/jenkins
      privileged: true
      volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - /opt/jenkins/kubeconfig:/home/jenkins/

# installa sudo nel container Jenkins Master  (step1)
   - name: Installa sudo nel container Jenkins Master step1
     community.docker.docker_container_exec:
        container: Jenkins_Master_Container
        command: apt-get update 
        user: root
        tty: true

# installa sudo nel container Jenkins Master (step2)
   - name: Installa sudo nel container Jenkins Master step2
     community.docker.docker_container_exec:
        container: Jenkins_Master_Container
        command: apt-get install -y sudo
        user: root
        tty: true

# installa sudo nel container Jenkins Master (step3)
   - name: Installa sudo nel container Jenkins Master step3
     community.docker.docker_container_exec:
        container: Jenkins_Master_Container
        command: usermod -aG sudo jenkins
        user: root
        tty: true

# installa sudo nel container Jenkins Master (step4)
# rimozione richiesta password per sudo
   - name: Installa sudo nel container Jenkins Master step4
     community.docker.docker_container_exec:
        container: Jenkins_Master_Container
        command: bash -c "echo 'jenkins ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers"     
        user: root
        tty: true

# install sudo nel container Jenkins Agent (step1)
   - name: Installa sudo nel container Jenkins Agent step1
     community.docker.docker_container_exec:
        container: Jenkins_Agent_Container
        command: apt-get update 
        user: root
        tty: true  

# install sudo nel container Jenkins Agent (step2)
   - name: Installa sudo nel container Jenkins Agent step2
     community.docker.docker_container_exec:
        container: Jenkins_Agent_Container
        command: apt-get install -y sudo
        user: root
        tty: true

# install sudo nel container Jenkins Agent (step3)
   - name: Installa sudo nel container Jenkins Agent step3
     community.docker.docker_container_exec:
        container: Jenkins_Agent_Container
        command: usermod -a -G sudo jenkins
        user: root
        tty: true

# install sudo nel container Jenkins Agent  (step4)
# rimozione richiesta password per sudo
   - name: Installa sudo nel container Jenkins Agent step4
     community.docker.docker_container_exec:
        container: Jenkins_Agent_Container
        command: bash -c "echo 'jenkins ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers"
        user: root
        tty: true

#aggiungere il gruppo docker nel container jenkins master
   - name: Assicurati che il gruppo docker esista nel container Jenkins Master
     community.docker.docker_container_exec:
        container: Jenkins_Agent_Container
        command: groupadd -f docker
        user: root
        tty: true
#aggiungere il gruppo docker nel container jenkins agent 
   - name: Add jenkins user to docker group inside Jenkins Agent container
     community.docker.docker_container_exec:
        container: Jenkins_Agent_Container
        command: usermod -a -G docker jenkins
        user: root
        tty: true
   
#permessi gruppo jenkins per interagire con il dockr sock   
   - name: permessi gruppo jenkins per interagire con docker sock
     community.docker.docker_container_exec:
      container: Jenkins_Agent_Container
      command: chown root:jenkins /var/run/docker.sock
      user: root
      tty: true

#installa helm nel container jenkins agent 
   - name: Install Helm 1
     community.docker.docker_container_exec:
      container: Jenkins_Agent_Container
      command: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      user: root
      tty: true

#installa helm nel container jenkins agent
   - name: Install Helm 2
     community.docker.docker_container_exec:
      container: Jenkins_Agent_Container
      command: chmod 700 get_helm.sh
      user: root
      tty: true

#installa helm nel container jenkins agent     
   - name: Install Helm 3
     community.docker.docker_container_exec:
      container: Jenkins_Agent_Container
      command: ./get_helm.sh
      user: root
      tty: true

#installa kubectl nel container jenkins agent
   - name: Download kubectl
     community.docker.docker_container_exec:
      container: Jenkins_Agent_Container
      command: >
         sh -c 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s -L https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"'
      user: root
      tty: true

#installa kubectl nel container jenkins agent
   - name: Install kubectl 2
     community.docker.docker_container_exec:
      container: Jenkins_Agent_Container
      command: chmod +x kubectl
      user: root
      tty: true

#installa kubectl nel container jenkins agent
   - name: Install kubectl 3
     community.docker.docker_container_exec:
      container: Jenkins_Agent_Container
      command: mv kubectl /usr/local/bin/kubectl
      user: root
      tty: true